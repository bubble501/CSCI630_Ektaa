
var game= new Phaser.Game(800,600,Phaser.AUTO, '', {preload: preload, create: create, update: update});
var platforms;
var mainState = 
{
		preload : function ()
		{
			game.load.image('sky', './assets/sky.png');
			game.load.image('ground', './assets/platform.png');
			game.load.image('star', './assets/star.png');
			game.load.spritesheet('dude', './assets/dude.png', 32, 48);
		},
		
		create: function()
		{
			game.physics.startSystem(Phaser.Physics.ARCADE);
			game.add.sprite(0, 0, 'sky');
			platforms=game.add.group();
			platforms.enableBody=true;
			var ground=platforms.create(0,game.world.height - 64, 'ground');
			ground.scale.setTo(2, 2);
			ground.body.immovable=true;
    //var ledge=platforms.create(400, 400, 'ground');
    //ledge.body.immovable=true;
    //ledge=platforms.create(-150, 250, 'ground');
    //ledge.body.immovable=true;
    
			player=game.add.sprite(32, game.world.height - 150, 'dude');
			game.physics.arcade.enable(player);
			player.body.bounce.y = 0.2;
			player.body.gravity.y = 300;
			player.body.collideWorldBounds = true;
			player.animations.add('left', [0,1,2,3], 10, true);
			player.animations.add('right', [5,6,7,8], 10, true);
    
			stars = game.add.group();
    
			stars.enableBody = true;
    
			for (var i = 0; i < 12; i++)
			{
				//  Create a star inside of the 'stars' group
				var star = stars.create(i * 70, 0, 'star');

				//  Let gravity do its thing
				star.body.gravity.y =30;

				//  This just gives each star a slightly random bounce value
				star.body.bounce.y = 0.9 + Math.random() * 0.2;
				star.body.collideWorldBounds = true;
			}
		},
		update: function()
		{
			game.physics.arcade.collide(player, platforms);
			cursors = game.input.keyboard.createCursorKeys();
    
			//  Reset the players velocity (movement)
			player.body.velocity.x = 0;

			if (cursors.left.isDown)
			{
				//  Move to the left
				player.body.velocity.x = -150;

				player.animations.play('left');
			}
			else if (cursors.right.isDown)
			{
				//  Move to the right
				player.body.velocity.x = 150;

				player.animations.play('right');
			}
			else
			{
				//  Stand still
				player.animations.stop();

				player.frame = 4;
			}

			//  Allow the player to jump if they are touching the ground.
			if (cursors.up.isDown && player.body.touching.down)
			{
				player.body.velocity.y = -350;
			}
    
			game.physics.arcade.collide(stars, platforms);
			game.physics.arcade.collide(player, stars, collectStar, null, this);

		},

		collectStar : function(player, star)
		{
			//Removes the star from the screen
			star.kill();
		},
};

game.state.add('main', mainState);
game.state.start('main');

